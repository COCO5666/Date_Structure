#include <stdio.h>
#include <malloc.h>
#define MaxSize 100
typedef char ElemType;
typedef struct 
{	
	ElemType data[MaxSize];
	int front,rear;		//队首和队尾指针
} SqQueue;
void InitQueue(SqQueue *&q)
{	q=(SqQueue *)malloc (sizeof(SqQueue));
	q->front=q->rear=0;
}
void DestroyQueue(SqQueue *&q)
{
	free(q);
}
bool QueueEmpty(SqQueue *q)
{
	return(q->front==q->rear);
}
bool enQueue(SqQueue *&q,ElemType e)
{	if ((q->rear+1)%MaxSize==q->front)	//队满上溢出
		return false;
	q->rear=(q->rear+1)%MaxSize;
	q->data[q->rear]=e;
	return true;
}
bool deQueue(SqQueue *&q,ElemType &e)
{	if (q->front==q->rear)		//队空下溢出
		return false;
	q->front=(q->front+1)%MaxSize;
	e=q->data[q->front];
	return true;
}
int QueueLength(SqQueue* q)
{
    return (q->rear-q->front+MaxSize)%MaxSize;
}

void main()
{
	SqQueue *q;
	ElemType e;
	InitQueue(q);
	printf("刚初始化队列:队列%s\n",(QueueEmpty(q)?"为空":"非空"));
	enQueue(q,1);
	enQueue(q,2);
	enQueue(q,3);
	enQueue(q,4);
	enQueue(q,5);
	printf("进队列后，队列的长度为：%d\n",QueueLength(q));

	printf("出队的顺序是:");


	while (!QueueEmpty(q))
	{
		deQueue(q,e);
		printf("%d ",e);
	}
	printf("\n");
	printf("出队列后:队列%s\n",(QueueEmpty(q)?"为空":"非空"));
	DestroyQueue(q);
}